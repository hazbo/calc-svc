// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calc.proto

package calc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	X                    int64    `protobuf:"zigzag64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int64    `protobuf:"zigzag64,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *SumRequest) GetY() int64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type SumResponse struct {
	Z                    int64    `protobuf:"zigzag64,1,opt,name=z,proto3" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetZ() int64 {
	if m != nil {
		return m.Z
	}
	return 0
}

type MulRequest struct {
	X                    int64    `protobuf:"zigzag64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    int64    `protobuf:"zigzag64,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MulRequest) Reset()         { *m = MulRequest{} }
func (m *MulRequest) String() string { return proto.CompactTextString(m) }
func (*MulRequest) ProtoMessage()    {}
func (*MulRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{2}
}

func (m *MulRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MulRequest.Unmarshal(m, b)
}
func (m *MulRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MulRequest.Marshal(b, m, deterministic)
}
func (m *MulRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MulRequest.Merge(m, src)
}
func (m *MulRequest) XXX_Size() int {
	return xxx_messageInfo_MulRequest.Size(m)
}
func (m *MulRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MulRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MulRequest proto.InternalMessageInfo

func (m *MulRequest) GetX() int64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *MulRequest) GetY() int64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type MulResponse struct {
	Z                    int64    `protobuf:"zigzag64,1,opt,name=z,proto3" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MulResponse) Reset()         { *m = MulResponse{} }
func (m *MulResponse) String() string { return proto.CompactTextString(m) }
func (*MulResponse) ProtoMessage()    {}
func (*MulResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{3}
}

func (m *MulResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MulResponse.Unmarshal(m, b)
}
func (m *MulResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MulResponse.Marshal(b, m, deterministic)
}
func (m *MulResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MulResponse.Merge(m, src)
}
func (m *MulResponse) XXX_Size() int {
	return xxx_messageInfo_MulResponse.Size(m)
}
func (m *MulResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MulResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MulResponse proto.InternalMessageInfo

func (m *MulResponse) GetZ() int64 {
	if m != nil {
		return m.Z
	}
	return 0
}

type DivRequest struct {
	X                    float64  `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float64  `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DivRequest) Reset()         { *m = DivRequest{} }
func (m *DivRequest) String() string { return proto.CompactTextString(m) }
func (*DivRequest) ProtoMessage()    {}
func (*DivRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{4}
}

func (m *DivRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DivRequest.Unmarshal(m, b)
}
func (m *DivRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DivRequest.Marshal(b, m, deterministic)
}
func (m *DivRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DivRequest.Merge(m, src)
}
func (m *DivRequest) XXX_Size() int {
	return xxx_messageInfo_DivRequest.Size(m)
}
func (m *DivRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DivRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DivRequest proto.InternalMessageInfo

func (m *DivRequest) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *DivRequest) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

type DivResponse struct {
	Z                    float64  `protobuf:"fixed64,1,opt,name=z,proto3" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DivResponse) Reset()         { *m = DivResponse{} }
func (m *DivResponse) String() string { return proto.CompactTextString(m) }
func (*DivResponse) ProtoMessage()    {}
func (*DivResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2b9900dc883ea68, []int{5}
}

func (m *DivResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DivResponse.Unmarshal(m, b)
}
func (m *DivResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DivResponse.Marshal(b, m, deterministic)
}
func (m *DivResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DivResponse.Merge(m, src)
}
func (m *DivResponse) XXX_Size() int {
	return xxx_messageInfo_DivResponse.Size(m)
}
func (m *DivResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DivResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DivResponse proto.InternalMessageInfo

func (m *DivResponse) GetZ() float64 {
	if m != nil {
		return m.Z
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calc.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calc.SumResponse")
	proto.RegisterType((*MulRequest)(nil), "calc.MulRequest")
	proto.RegisterType((*MulResponse)(nil), "calc.MulResponse")
	proto.RegisterType((*DivRequest)(nil), "calc.DivRequest")
	proto.RegisterType((*DivResponse)(nil), "calc.DivResponse")
}

func init() {
	proto.RegisterFile("calc.proto", fileDescriptor_a2b9900dc883ea68)
}

var fileDescriptor_a2b9900dc883ea68 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x4e, 0xcc, 0x49,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x34, 0xb8, 0xb8, 0x82, 0x4b,
	0x73, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x78, 0xb8, 0x18, 0x2b, 0x24, 0x18, 0x15,
	0x18, 0x35, 0x84, 0x82, 0x18, 0x2b, 0x40, 0xbc, 0x4a, 0x09, 0x26, 0x08, 0xaf, 0x52, 0x49, 0x9a,
	0x8b, 0x1b, 0xac, 0xb2, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x15, 0x24, 0x59, 0x05, 0x53, 0x5a, 0x05,
	0x32, 0xc6, 0xb7, 0x34, 0x87, 0x48, 0x63, 0xc0, 0x2a, 0x71, 0x19, 0xe3, 0x92, 0x59, 0x86, 0x61,
	0x0c, 0x23, 0x8a, 0x31, 0x8c, 0x50, 0x63, 0xc0, 0x2a, 0xd1, 0x8d, 0x61, 0x0c, 0x62, 0xac, 0x32,
	0x9a, 0xc6, 0xc8, 0xc5, 0xe5, 0x9c, 0x98, 0x93, 0x5c, 0x9a, 0x93, 0x58, 0x92, 0x5f, 0x24, 0xa4,
	0xc3, 0xc5, 0x1c, 0x5c, 0x9a, 0x2b, 0x24, 0xa0, 0x07, 0xf6, 0x3d, 0xc2, 0xbb, 0x52, 0x82, 0x48,
	0x22, 0x10, 0x83, 0x94, 0x18, 0x40, 0xaa, 0x7d, 0x4b, 0x73, 0x60, 0xaa, 0x11, 0xbe, 0x82, 0xa9,
	0x46, 0x72, 0x3d, 0x44, 0xb5, 0x4b, 0x66, 0x19, 0x4c, 0x35, 0xc2, 0xf1, 0x30, 0xd5, 0x48, 0x8e,
	0x54, 0x62, 0x48, 0x62, 0x03, 0x07, 0xbd, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xa5, 0x9a, 0xf9,
	0xa7, 0x88, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CalculatorClient is the client API for Calculator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	Mul(ctx context.Context, in *MulRequest, opts ...grpc.CallOption) (*MulResponse, error)
	Div(ctx context.Context, in *DivRequest, opts ...grpc.CallOption) (*DivResponse, error)
}

type calculatorClient struct {
	cc grpc.ClientConnInterface
}

func NewCalculatorClient(cc grpc.ClientConnInterface) CalculatorClient {
	return &calculatorClient{cc}
}

func (c *calculatorClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calc.Calculator/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorClient) Mul(ctx context.Context, in *MulRequest, opts ...grpc.CallOption) (*MulResponse, error) {
	out := new(MulResponse)
	err := c.cc.Invoke(ctx, "/calc.Calculator/Mul", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorClient) Div(ctx context.Context, in *DivRequest, opts ...grpc.CallOption) (*DivResponse, error) {
	out := new(DivResponse)
	err := c.cc.Invoke(ctx, "/calc.Calculator/Div", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CalculatorServer is the server API for Calculator service.
type CalculatorServer interface {
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	Mul(context.Context, *MulRequest) (*MulResponse, error)
	Div(context.Context, *DivRequest) (*DivResponse, error)
}

// UnimplementedCalculatorServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServer struct {
}

func (*UnimplementedCalculatorServer) Sum(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalculatorServer) Mul(ctx context.Context, req *MulRequest) (*MulResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Mul not implemented")
}
func (*UnimplementedCalculatorServer) Div(ctx context.Context, req *DivRequest) (*DivResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Div not implemented")
}

func RegisterCalculatorServer(s *grpc.Server, srv CalculatorServer) {
	s.RegisterService(&_Calculator_serviceDesc, srv)
}

func _Calculator_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calc.Calculator/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calculator_Mul_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MulRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServer).Mul(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calc.Calculator/Mul",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServer).Mul(ctx, req.(*MulRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Calculator_Div_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DivRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServer).Div(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calc.Calculator/Div",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServer).Div(ctx, req.(*DivRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Calculator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calc.Calculator",
	HandlerType: (*CalculatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _Calculator_Sum_Handler,
		},
		{
			MethodName: "Mul",
			Handler:    _Calculator_Mul_Handler,
		},
		{
			MethodName: "Div",
			Handler:    _Calculator_Div_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calc.proto",
}
